Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    TRUE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> arithmetic_expression
Rule 2     expression -> logical_expression
Rule 3     expression -> comparison_expression
Rule 4     arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression
Rule 5     arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression
Rule 6     arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression
Rule 7     arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression
Rule 8     arithmetic_expression -> LPAREN arithmetic_expression RPAREN
Rule 9     arithmetic_expression -> MINUS arithmetic_expression
Rule 10    arithmetic_expression -> NUMBER
Rule 11    logical_expression -> logical_expression AND logical_expression
Rule 12    logical_expression -> logical_expression OR logical_expression
Rule 13    logical_expression -> NOT logical_expression
Rule 14    logical_expression -> LPAREN logical_expression RPAREN
Rule 15    logical_expression -> comparison_expression
Rule 16    comparison_expression -> arithmetic_expression LT arithmetic_expression
Rule 17    comparison_expression -> arithmetic_expression LE arithmetic_expression
Rule 18    comparison_expression -> arithmetic_expression GT arithmetic_expression
Rule 19    comparison_expression -> arithmetic_expression GE arithmetic_expression
Rule 20    comparison_expression -> arithmetic_expression EQ arithmetic_expression
Rule 21    comparison_expression -> arithmetic_expression NE arithmetic_expression
Rule 22    expression -> expression COMMENT
Rule 23    expression -> COMMENT expression
Rule 24    expression -> COMMENT

Terminals, with rules where they appear

AND                  : 11
COMMENT              : 22 23 24
DIVIDE               : 7
EQ                   : 20
FALSE                : 
GE                   : 19
GT                   : 18
LE                   : 17
LPAREN               : 8 14
LT                   : 16
MINUS                : 5 9
NE                   : 21
NOT                  : 13
NUMBER               : 10
OR                   : 12
PLUS                 : 4
RPAREN               : 8 14
TIMES                : 6
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

arithmetic_expression : 1 4 4 5 5 6 6 7 7 8 9 16 16 17 17 18 18 19 19 20 20 21 21
comparison_expression : 3 15
expression           : 22 23 0
logical_expression   : 2 11 11 12 12 13 14

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . arithmetic_expression
    (2) expression -> . logical_expression
    (3) expression -> . comparison_expression
    (22) expression -> . expression COMMENT
    (23) expression -> . COMMENT expression
    (24) expression -> . COMMENT
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression

    COMMENT         shift and go to state 5
    LPAREN          shift and go to state 7
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8
    NOT             shift and go to state 9

    expression                     shift and go to state 1
    arithmetic_expression          shift and go to state 2
    logical_expression             shift and go to state 3
    comparison_expression          shift and go to state 4

state 1

    (0) S' -> expression .
    (22) expression -> expression . COMMENT

    COMMENT         shift and go to state 10


state 2

    (1) expression -> arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (16) comparison_expression -> arithmetic_expression . LT arithmetic_expression
    (17) comparison_expression -> arithmetic_expression . LE arithmetic_expression
    (18) comparison_expression -> arithmetic_expression . GT arithmetic_expression
    (19) comparison_expression -> arithmetic_expression . GE arithmetic_expression
    (20) comparison_expression -> arithmetic_expression . EQ arithmetic_expression
    (21) comparison_expression -> arithmetic_expression . NE arithmetic_expression

    COMMENT         reduce using rule 1 (expression -> arithmetic_expression .)
    $end            reduce using rule 1 (expression -> arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    LT              shift and go to state 15
    LE              shift and go to state 16
    GT              shift and go to state 17
    GE              shift and go to state 18
    EQ              shift and go to state 19
    NE              shift and go to state 20


state 3

    (2) expression -> logical_expression .
    (11) logical_expression -> logical_expression . AND logical_expression
    (12) logical_expression -> logical_expression . OR logical_expression

    COMMENT         reduce using rule 2 (expression -> logical_expression .)
    $end            reduce using rule 2 (expression -> logical_expression .)
    AND             shift and go to state 21
    OR              shift and go to state 22


state 4

    (3) expression -> comparison_expression .
    (15) logical_expression -> comparison_expression .

  ! reduce/reduce conflict for COMMENT resolved using rule 3 (expression -> comparison_expression .)
  ! reduce/reduce conflict for $end resolved using rule 3 (expression -> comparison_expression .)
    COMMENT         reduce using rule 3 (expression -> comparison_expression .)
    $end            reduce using rule 3 (expression -> comparison_expression .)
    AND             reduce using rule 15 (logical_expression -> comparison_expression .)
    OR              reduce using rule 15 (logical_expression -> comparison_expression .)

  ! COMMENT         [ reduce using rule 15 (logical_expression -> comparison_expression .) ]
  ! $end            [ reduce using rule 15 (logical_expression -> comparison_expression .) ]


state 5

    (23) expression -> COMMENT . expression
    (24) expression -> COMMENT .
    (1) expression -> . arithmetic_expression
    (2) expression -> . logical_expression
    (3) expression -> . comparison_expression
    (22) expression -> . expression COMMENT
    (23) expression -> . COMMENT expression
    (24) expression -> . COMMENT
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression

  ! shift/reduce conflict for COMMENT resolved as shift
    $end            reduce using rule 24 (expression -> COMMENT .)
    COMMENT         shift and go to state 5
    LPAREN          shift and go to state 7
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8
    NOT             shift and go to state 9

  ! COMMENT         [ reduce using rule 24 (expression -> COMMENT .) ]

    expression                     shift and go to state 23
    arithmetic_expression          shift and go to state 2
    logical_expression             shift and go to state 3
    comparison_expression          shift and go to state 4

state 6

    (9) arithmetic_expression -> MINUS . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 24

state 7

    (8) arithmetic_expression -> LPAREN . arithmetic_expression RPAREN
    (14) logical_expression -> LPAREN . logical_expression RPAREN
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression

    LPAREN          shift and go to state 7
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8
    NOT             shift and go to state 9

    arithmetic_expression          shift and go to state 26
    logical_expression             shift and go to state 27
    comparison_expression          shift and go to state 28

state 8

    (10) arithmetic_expression -> NUMBER .

    PLUS            reduce using rule 10 (arithmetic_expression -> NUMBER .)
    MINUS           reduce using rule 10 (arithmetic_expression -> NUMBER .)
    TIMES           reduce using rule 10 (arithmetic_expression -> NUMBER .)
    DIVIDE          reduce using rule 10 (arithmetic_expression -> NUMBER .)
    LT              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    LE              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    GT              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    GE              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    EQ              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    NE              reduce using rule 10 (arithmetic_expression -> NUMBER .)
    COMMENT         reduce using rule 10 (arithmetic_expression -> NUMBER .)
    $end            reduce using rule 10 (arithmetic_expression -> NUMBER .)
    RPAREN          reduce using rule 10 (arithmetic_expression -> NUMBER .)
    AND             reduce using rule 10 (arithmetic_expression -> NUMBER .)
    OR              reduce using rule 10 (arithmetic_expression -> NUMBER .)


state 9

    (13) logical_expression -> NOT . logical_expression
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    NOT             shift and go to state 9
    LPAREN          shift and go to state 30
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    logical_expression             shift and go to state 29
    comparison_expression          shift and go to state 28
    arithmetic_expression          shift and go to state 31

state 10

    (22) expression -> expression COMMENT .

    COMMENT         reduce using rule 22 (expression -> expression COMMENT .)
    $end            reduce using rule 22 (expression -> expression COMMENT .)


state 11

    (4) arithmetic_expression -> arithmetic_expression PLUS . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 32

state 12

    (5) arithmetic_expression -> arithmetic_expression MINUS . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 33

state 13

    (6) arithmetic_expression -> arithmetic_expression TIMES . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 34

state 14

    (7) arithmetic_expression -> arithmetic_expression DIVIDE . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 35

state 15

    (16) comparison_expression -> arithmetic_expression LT . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 36

state 16

    (17) comparison_expression -> arithmetic_expression LE . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 37

state 17

    (18) comparison_expression -> arithmetic_expression GT . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 38

state 18

    (19) comparison_expression -> arithmetic_expression GE . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 39

state 19

    (20) comparison_expression -> arithmetic_expression EQ . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 40

state 20

    (21) comparison_expression -> arithmetic_expression NE . arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 41

state 21

    (11) logical_expression -> logical_expression AND . logical_expression
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    NOT             shift and go to state 9
    LPAREN          shift and go to state 30
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    logical_expression             shift and go to state 42
    comparison_expression          shift and go to state 28
    arithmetic_expression          shift and go to state 31

state 22

    (12) logical_expression -> logical_expression OR . logical_expression
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    NOT             shift and go to state 9
    LPAREN          shift and go to state 30
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    logical_expression             shift and go to state 43
    comparison_expression          shift and go to state 28
    arithmetic_expression          shift and go to state 31

state 23

    (23) expression -> COMMENT expression .
    (22) expression -> expression . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    $end            reduce using rule 23 (expression -> COMMENT expression .)
    COMMENT         shift and go to state 10

  ! COMMENT         [ reduce using rule 23 (expression -> COMMENT expression .) ]


state 24

    (9) arithmetic_expression -> MINUS arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    PLUS            reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    MINUS           reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    TIMES           reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    DIVIDE          reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    LT              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    LE              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    GT              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    GE              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    EQ              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    NE              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    COMMENT         reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    $end            reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    RPAREN          reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    AND             reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)
    OR              reduce using rule 9 (arithmetic_expression -> MINUS arithmetic_expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 25

    (8) arithmetic_expression -> LPAREN . arithmetic_expression RPAREN
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER

    LPAREN          shift and go to state 25
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    arithmetic_expression          shift and go to state 44

state 26

    (8) arithmetic_expression -> LPAREN arithmetic_expression . RPAREN
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (16) comparison_expression -> arithmetic_expression . LT arithmetic_expression
    (17) comparison_expression -> arithmetic_expression . LE arithmetic_expression
    (18) comparison_expression -> arithmetic_expression . GT arithmetic_expression
    (19) comparison_expression -> arithmetic_expression . GE arithmetic_expression
    (20) comparison_expression -> arithmetic_expression . EQ arithmetic_expression
    (21) comparison_expression -> arithmetic_expression . NE arithmetic_expression

    RPAREN          shift and go to state 45
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    LT              shift and go to state 15
    LE              shift and go to state 16
    GT              shift and go to state 17
    GE              shift and go to state 18
    EQ              shift and go to state 19
    NE              shift and go to state 20


state 27

    (14) logical_expression -> LPAREN logical_expression . RPAREN
    (11) logical_expression -> logical_expression . AND logical_expression
    (12) logical_expression -> logical_expression . OR logical_expression

    RPAREN          shift and go to state 46
    AND             shift and go to state 21
    OR              shift and go to state 22


state 28

    (15) logical_expression -> comparison_expression .

    RPAREN          reduce using rule 15 (logical_expression -> comparison_expression .)
    AND             reduce using rule 15 (logical_expression -> comparison_expression .)
    OR              reduce using rule 15 (logical_expression -> comparison_expression .)
    COMMENT         reduce using rule 15 (logical_expression -> comparison_expression .)
    $end            reduce using rule 15 (logical_expression -> comparison_expression .)


state 29

    (13) logical_expression -> NOT logical_expression .
    (11) logical_expression -> logical_expression . AND logical_expression
    (12) logical_expression -> logical_expression . OR logical_expression

    AND             reduce using rule 13 (logical_expression -> NOT logical_expression .)
    OR              reduce using rule 13 (logical_expression -> NOT logical_expression .)
    COMMENT         reduce using rule 13 (logical_expression -> NOT logical_expression .)
    $end            reduce using rule 13 (logical_expression -> NOT logical_expression .)
    RPAREN          reduce using rule 13 (logical_expression -> NOT logical_expression .)

  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]


state 30

    (14) logical_expression -> LPAREN . logical_expression RPAREN
    (8) arithmetic_expression -> LPAREN . arithmetic_expression RPAREN
    (11) logical_expression -> . logical_expression AND logical_expression
    (12) logical_expression -> . logical_expression OR logical_expression
    (13) logical_expression -> . NOT logical_expression
    (14) logical_expression -> . LPAREN logical_expression RPAREN
    (15) logical_expression -> . comparison_expression
    (4) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (5) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (6) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (7) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (8) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (9) arithmetic_expression -> . MINUS arithmetic_expression
    (10) arithmetic_expression -> . NUMBER
    (16) comparison_expression -> . arithmetic_expression LT arithmetic_expression
    (17) comparison_expression -> . arithmetic_expression LE arithmetic_expression
    (18) comparison_expression -> . arithmetic_expression GT arithmetic_expression
    (19) comparison_expression -> . arithmetic_expression GE arithmetic_expression
    (20) comparison_expression -> . arithmetic_expression EQ arithmetic_expression
    (21) comparison_expression -> . arithmetic_expression NE arithmetic_expression

    NOT             shift and go to state 9
    LPAREN          shift and go to state 30
    MINUS           shift and go to state 6
    NUMBER          shift and go to state 8

    logical_expression             shift and go to state 27
    arithmetic_expression          shift and go to state 26
    comparison_expression          shift and go to state 28

state 31

    (16) comparison_expression -> arithmetic_expression . LT arithmetic_expression
    (17) comparison_expression -> arithmetic_expression . LE arithmetic_expression
    (18) comparison_expression -> arithmetic_expression . GT arithmetic_expression
    (19) comparison_expression -> arithmetic_expression . GE arithmetic_expression
    (20) comparison_expression -> arithmetic_expression . EQ arithmetic_expression
    (21) comparison_expression -> arithmetic_expression . NE arithmetic_expression
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    LT              shift and go to state 15
    LE              shift and go to state 16
    GT              shift and go to state 17
    GE              shift and go to state 18
    EQ              shift and go to state 19
    NE              shift and go to state 20
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 32

    (4) arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    PLUS            reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    MINUS           reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LT              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LE              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    GT              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    GE              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    EQ              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NE              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    COMMENT         reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    $end            reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    RPAREN          reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    AND             reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    OR              reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 4 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]


state 33

    (5) arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    PLUS            reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    MINUS           reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LT              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LE              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    GT              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    GE              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    EQ              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NE              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    COMMENT         reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    $end            reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    RPAREN          reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    AND             reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    OR              reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 5 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]


state 34

    (6) arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    PLUS            reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    MINUS           reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    TIMES           reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DIVIDE          reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LT              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LE              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    GT              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    GE              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    EQ              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    NE              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    COMMENT         reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    $end            reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    RPAREN          reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    AND             reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    OR              reduce using rule 6 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 35

    (7) arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    PLUS            reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    MINUS           reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    TIMES           reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DIVIDE          reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LT              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LE              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    GT              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    GE              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    EQ              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    NE              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    COMMENT         reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    $end            reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    RPAREN          reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    AND             reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    OR              reduce using rule 7 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 36

    (16) comparison_expression -> arithmetic_expression LT arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 16 (comparison_expression -> arithmetic_expression LT arithmetic_expression .)
    $end            reduce using rule 16 (comparison_expression -> arithmetic_expression LT arithmetic_expression .)
    AND             reduce using rule 16 (comparison_expression -> arithmetic_expression LT arithmetic_expression .)
    OR              reduce using rule 16 (comparison_expression -> arithmetic_expression LT arithmetic_expression .)
    RPAREN          reduce using rule 16 (comparison_expression -> arithmetic_expression LT arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 37

    (17) comparison_expression -> arithmetic_expression LE arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 17 (comparison_expression -> arithmetic_expression LE arithmetic_expression .)
    $end            reduce using rule 17 (comparison_expression -> arithmetic_expression LE arithmetic_expression .)
    AND             reduce using rule 17 (comparison_expression -> arithmetic_expression LE arithmetic_expression .)
    OR              reduce using rule 17 (comparison_expression -> arithmetic_expression LE arithmetic_expression .)
    RPAREN          reduce using rule 17 (comparison_expression -> arithmetic_expression LE arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 38

    (18) comparison_expression -> arithmetic_expression GT arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 18 (comparison_expression -> arithmetic_expression GT arithmetic_expression .)
    $end            reduce using rule 18 (comparison_expression -> arithmetic_expression GT arithmetic_expression .)
    AND             reduce using rule 18 (comparison_expression -> arithmetic_expression GT arithmetic_expression .)
    OR              reduce using rule 18 (comparison_expression -> arithmetic_expression GT arithmetic_expression .)
    RPAREN          reduce using rule 18 (comparison_expression -> arithmetic_expression GT arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 39

    (19) comparison_expression -> arithmetic_expression GE arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 19 (comparison_expression -> arithmetic_expression GE arithmetic_expression .)
    $end            reduce using rule 19 (comparison_expression -> arithmetic_expression GE arithmetic_expression .)
    AND             reduce using rule 19 (comparison_expression -> arithmetic_expression GE arithmetic_expression .)
    OR              reduce using rule 19 (comparison_expression -> arithmetic_expression GE arithmetic_expression .)
    RPAREN          reduce using rule 19 (comparison_expression -> arithmetic_expression GE arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 40

    (20) comparison_expression -> arithmetic_expression EQ arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 20 (comparison_expression -> arithmetic_expression EQ arithmetic_expression .)
    $end            reduce using rule 20 (comparison_expression -> arithmetic_expression EQ arithmetic_expression .)
    AND             reduce using rule 20 (comparison_expression -> arithmetic_expression EQ arithmetic_expression .)
    OR              reduce using rule 20 (comparison_expression -> arithmetic_expression EQ arithmetic_expression .)
    RPAREN          reduce using rule 20 (comparison_expression -> arithmetic_expression EQ arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 41

    (21) comparison_expression -> arithmetic_expression NE arithmetic_expression .
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    COMMENT         reduce using rule 21 (comparison_expression -> arithmetic_expression NE arithmetic_expression .)
    $end            reduce using rule 21 (comparison_expression -> arithmetic_expression NE arithmetic_expression .)
    AND             reduce using rule 21 (comparison_expression -> arithmetic_expression NE arithmetic_expression .)
    OR              reduce using rule 21 (comparison_expression -> arithmetic_expression NE arithmetic_expression .)
    RPAREN          reduce using rule 21 (comparison_expression -> arithmetic_expression NE arithmetic_expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 42

    (11) logical_expression -> logical_expression AND logical_expression .
    (11) logical_expression -> logical_expression . AND logical_expression
    (12) logical_expression -> logical_expression . OR logical_expression

    AND             reduce using rule 11 (logical_expression -> logical_expression AND logical_expression .)
    OR              reduce using rule 11 (logical_expression -> logical_expression AND logical_expression .)
    COMMENT         reduce using rule 11 (logical_expression -> logical_expression AND logical_expression .)
    $end            reduce using rule 11 (logical_expression -> logical_expression AND logical_expression .)
    RPAREN          reduce using rule 11 (logical_expression -> logical_expression AND logical_expression .)

  ! AND             [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]


state 43

    (12) logical_expression -> logical_expression OR logical_expression .
    (11) logical_expression -> logical_expression . AND logical_expression
    (12) logical_expression -> logical_expression . OR logical_expression

    OR              reduce using rule 12 (logical_expression -> logical_expression OR logical_expression .)
    COMMENT         reduce using rule 12 (logical_expression -> logical_expression OR logical_expression .)
    $end            reduce using rule 12 (logical_expression -> logical_expression OR logical_expression .)
    RPAREN          reduce using rule 12 (logical_expression -> logical_expression OR logical_expression .)
    AND             shift and go to state 21

  ! AND             [ reduce using rule 12 (logical_expression -> logical_expression OR logical_expression .) ]
  ! OR              [ shift and go to state 22 ]


state 44

    (8) arithmetic_expression -> LPAREN arithmetic_expression . RPAREN
    (4) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (5) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (6) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (7) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression

    RPAREN          shift and go to state 45
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14


state 45

    (8) arithmetic_expression -> LPAREN arithmetic_expression RPAREN .

    PLUS            reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    MINUS           reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    TIMES           reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    DIVIDE          reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    LT              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    LE              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    GT              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    GE              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    EQ              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    NE              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    COMMENT         reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    $end            reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    RPAREN          reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    AND             reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    OR              reduce using rule 8 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)


state 46

    (14) logical_expression -> LPAREN logical_expression RPAREN .

    AND             reduce using rule 14 (logical_expression -> LPAREN logical_expression RPAREN .)
    OR              reduce using rule 14 (logical_expression -> LPAREN logical_expression RPAREN .)
    COMMENT         reduce using rule 14 (logical_expression -> LPAREN logical_expression RPAREN .)
    $end            reduce using rule 14 (logical_expression -> LPAREN logical_expression RPAREN .)
    RPAREN          reduce using rule 14 (logical_expression -> LPAREN logical_expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 23 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (expression -> comparison_expression)
WARNING: rejected rule (logical_expression -> comparison_expression) in state 4
